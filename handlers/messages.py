from aiogram import Router, F
from aiogram.types import Message
from database.connection import db
from services.finance_api import finance_api
import re

router = Router()


@router.message(F.text)
async def handle_text_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = message.text.strip().lower()
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    if text.startswith('/'):
        return
    
    # –ü–æ–∏—Å–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏–ª–∏ –∞–∫—Ü–∏–∏
    if len(text) >= 2:
        response = await process_finance_query(text)
    else:
        response = "‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏–ª–∏ –∞–∫—Ü–∏–∏ (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞).\n\nüí° –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!"
    
    await message.answer(response)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
    await db.save_interaction(
        user_id=message.from_user.id,
        username=message.from_user.username,
        request_text=message.text,
        response_text=response
    )


async def process_finance_query(query: str) -> str:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
    crypto_info = await finance_api.get_crypto_info(query)
    
    if crypto_info:
        return format_crypto_response(crypto_info)
    
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É, –ø—Ä–æ–±—É–µ–º –∞–∫—Ü–∏–∏
    stock_info = await finance_api.get_stock_price(query.upper())
    if stock_info:
        return format_stock_response(stock_info)
    
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –ø—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫
    search_results = await finance_api.search_crypto(query)
    if search_results:
        return format_search_results(search_results, query)
    
    return f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è '{query}'.\n\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã/–∞–∫—Ü–∏–∏"


def format_crypto_response(crypto_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"""
    change_24h = crypto_info.get('price_change_percentage_24h', 0)
    change_emoji = "üìà" if change_24h >= 0 else "üìâ"
    
    response = f"""
üí∞ {crypto_info['name']} ({crypto_info['symbol']})

üíµ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${crypto_info['current_price']:,.2f}
{change_emoji} –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: {change_24h:+.2f}%
üìä –†—ã–Ω–æ—á–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: ${crypto_info['market_cap']:,.0f}
üìà –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤ (24—á): ${crypto_info['volume_24h']:,.0f}

üìù –û–ø–∏—Å–∞–Ω–∏–µ:
{crypto_info['description']}

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é "üîî –ê–ª–µ—Ä—Ç—ã" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–µ–Ω–æ–≤–æ–≥–æ –∞–ª–µ—Ä—Ç–∞!
    """
    
    return response


def format_stock_response(stock_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–∫—Ü–∏–π"""
    change = stock_info.get('change', 0)
    change_emoji = "üìà" if change >= 0 else "üìâ"
    
    response = f"""
üìà {stock_info['symbol']}

üíµ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${stock_info['price']:,.2f}
{change_emoji} –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {change:+.2f} ({stock_info['change_percent']})
üìä –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤: {stock_info['volume']:,}
üí∞ –†—ã–Ω–æ—á–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: ${stock_info['market_cap']:,}

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é "üîî –ê–ª–µ—Ä—Ç—ã" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–µ–Ω–æ–≤–æ–≥–æ –∞–ª–µ—Ä—Ç–∞!
    """
    
    return response


def format_search_results(search_results: list, query: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞"""
    response = f"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–ª—è '{query}':\n\n"
    
    for i, coin in enumerate(search_results, 1):
        rank_text = f" (–†–∞–Ω–≥: #{coin['market_cap_rank']})" if coin['market_cap_rank'] else ""
        response += f"{i}. {coin['name']} ({coin['symbol']}){rank_text}\n"
    
    response += f"\nüí° –ù–∞–ø–∏—à–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
    
    return response


@router.message(F.text.regexp(r"^bitcoin$|^btc$"))
async def handle_bitcoin(message: Message):
    """–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Bitcoin"""
    crypto_info = await finance_api.get_crypto_info("bitcoin")
    if crypto_info:
        response = f"""
üèÜ Bitcoin (BTC) - –ö–æ—Ä–æ–ª—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç

üíµ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${crypto_info['current_price']:,.2f}
üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: {crypto_info['price_change_percentage_24h']:+.2f}%
üìä –†—ã–Ω–æ—á–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: ${crypto_info['market_cap']:,.0f}
üìà –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤ (24—á): ${crypto_info['volume_24h']:,.0f}

üíé –î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: ~50% —Ä—ã–Ω–∫–∞
üåê –ü–µ—Ä–≤–∞—è –∏ —Å–∞–º–∞—è –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è:
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤ –ø–æ —Ü–µ–Ω–µ
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–≤–æ–¥–∫–∏ —Ä—ã–Ω–∫–∞
        """
    else:
        response = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ Bitcoin."
    
    await message.answer(response)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
    await db.save_interaction(
        user_id=message.from_user.id,
        username=message.from_user.username,
        request_text=message.text,
        response_text=response
    )


@router.message(F.text.regexp(r"^ethereum$|^eth$"))
async def handle_ethereum(message: Message):
    """–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Ethereum"""
    crypto_info = await finance_api.get_crypto_info("ethereum")
    if crypto_info:
        response = f"""
üî∑ Ethereum (ETH) - –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤

üíµ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${crypto_info['current_price']:,.2f}
üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: {crypto_info['price_change_percentage_24h']:+.2f}%
üìä –†—ã–Ω–æ—á–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: ${crypto_info['market_cap']:,.0f}
üìà –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤ (24—á): ${crypto_info['volume_24h']:,.0f}

‚ö° –û—Å–Ω–æ–≤–∞ DeFi –∏ NFT —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
üîó –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è:
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤ –ø–æ —Ü–µ–Ω–µ
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–µ–Ω–¥–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
        """
    else:
        response = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ Ethereum."
    
    await message.answer(response)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
    await db.save_interaction(
        user_id=message.from_user.id,
        username=message.from_user.username,
        request_text=message.text,
        response_text=response
    )
